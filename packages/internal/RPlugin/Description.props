# Template Description file for a Weka package
# 

# Package name (required)
PackageName=RPlugin

# Version (required)
Version=1.3.31

#Date (year-month-day)
Date=2020-09-05

# Title (required)
Title=Execute R scripts and learning algorithms

# Category (recommended)
Category=R integration

# Author (required)
Author=Mark Hall <mhall@pentaho.com> and Eibe Frank <eibe@cs.waikato.ac.nz>

# Maintainer (required)
Maintainer=Mark Hall <mhall@pentaho.com> and Eibe Frank <eibe@cs.waikato.ac.nz>

# License (required)
License=LGPL 3.0

# Description (required)
Description=This plugin enables R functionality to be used through WEKA. It provides an R console, a Knowledge Flow component for executing an R script, and a wrapper classifier for the MLR (machine learning in R) R package. The interactive R console enables visualization of data loaded into WEKA using R. This package requires the R software to be installed on the system before it can be used. The bitness of the OS, R, and Java must match up. We recommend using 64-bit versions of all three.The plugin will attempt to set all required environment variables for the R integration. On macOS and Linux, this process assumes that the home of R on the system is /Library/Frameworks/R.framework/Resources and /usr/lib/R respectively. On Windows, R's home will be inferred automatically through the Windows registry. The plugin will attempt to download and install all required R libraries such as rJava and JavaGD automatically into R's user library folder. The location of the R user library folder is established by interrogating R directly. If R is installed in a non-standard location, the plugin can be informed about this by setting the environment variable R_HOME or the Java property r.home to point to the installation directory for R. If a non-standard destination for the R user library folder is desired, then this can be set using the R_LIBS_USER environment variable or the Java property r.libs.user. If the native libjri in R's rJava package is not found automatically, the jri.native.library java property can be set to point directly to the jri native library file, or the java.library.path can be set to point to the directory that contains the jri native library file. More information on configuring Java to access JRI under various OS can be found at https://www.rforge.net/JRI/ Example Knowledge Flow template files demonstrating the R components can be found in ${WEKA_HOME}/packages/RPlugin/templates.

# Package URL for obtaining the package archive (required)
PackageURL=https://prdownloads.sourceforge.net/weka/RPlugin1.3.31.zip?download

# URL for further information
URL=https://markahall.blogspot.co.nz/2012/07/r-integration-in-weka.html

# Changes in this release
Changes=Updated library .jar files (latest javaGD, xstream, and rJava .jar files) and .zip files for preload libraries. RPlugin works on ARM Mac as well now.

# Enhances various other packages ?
# Enhances=packageName1,packageName2,...

# Related to other packages?
# Related=packageName1,packageName2,...

# Dependencies (format: packageName (equality/inequality version_number)
Depends=weka (>=3.9.1)

# Message to display in installation. Can be used to provide
# special instructions (e.g. manual stuff needed to complete
# the installation process). (optional).
MessageToDisplayOnInstallation=This plugin requires the R software to be installed on the\n\
 system before it can be used. The bitness of the OS, R, and Java must match up. We recommend\n\
 using 64-bit versions of all three. The plugin will attempt to set all required environment\n\
 variables for the R integration. On macOS and Linux, this process assumes that the home of R\n\
 on the system is /Library/Frameworks/R.framework/Resources and /usr/lib/R respectively.
 On Windows, R's home will be inferred automatically through the Windows registry.\n\
 The plugin will attempt to download and install all required R libraries such as rJava\n\
 and JavaGD automatically into R's user library folder. The location of the R user\n\
 library folder is established by interrogating R directly.\n\n\
 If R is installed in a non-standard location, the plugin can be informed about this\n\
 by setting the environment variable R_HOME or the Java property r.home to point to the\n\
 installation directory for R. If a non-standard destination for the R user library folder\n\
 is desired, then this can be set using the R_LIBS_USER environment variable or the Java\n\
 property r.libs.user. If the native libjri in R's rJava package is not found automatically,\n\
 the jri.native.library java property can be set to point directly to the jri native library\n\
 file, or the java.library.path can be set to point to the directory that contains the jri native\n\
 library file. More information on configuring Java to access JRI under various OS\n\
 can be found at https://www.rforge.net/JRI/\n\n\
 Example Knowledge Flow template files demonstrating the R components can be found in\n\
 ${WEKA_HOME}/packages/RPlugin/templates.
